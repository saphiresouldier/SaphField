#ifndef OPERATIONS_INC
#define OPERATIONS_INC

float opUnion(float d1, float d2)
{
  return min(d1, d2);
}

float opSubtraction(float d1, float d2)
{
  return max(-d1, d2);
}

float opIntersection(float d1, float d2)
{
  return max(d1, d2);
}

float4 opSmoothUnion(float d1, float d2, float3 c1, float3 c2, float k)
{
  float h = clamp( 0.5+0.5*(d2-d1)/k, 0.0, 1.0 );
  float blendDst = lerp( d2, d1, h ) - k*h*(1.0-h);
  float3 blendCol = lerp(c2,c1,h);
  return float4(blendDst, blendCol); 
}

float opSmoothSubtraction( float d1, float d2, float k )
{
    float h = max(k-abs(-d1-d2),0.0);
    return max(-d1, d2) + h*h*0.25/k;
}

float opSmoothIntersection( float d1, float d2, float k )
{
    float h = max(k-abs(d1-d2),0.0);
    return max(d1, d2) + h*h*0.25/k;
}



#endif // OPERATIONS_INC