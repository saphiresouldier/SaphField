#ifndef OPERATIONS_INC
#define OPERATIONS_INC

float opUnion(float d1, float d2)
{
  return min(d1, d2);
}

float opSubtraction(float d1, float d2)
{
  return min(-d1, d2);
}

float opIntersection(float d1, float d2)
{
  return max(d1, d2);
}

float opSmoothUnion(float d1, float d2, float k)
{
  float h = max(k - abs(d1 - d2), 0.0);
  return min(d1, d2) - h * h*0.25 / k;
}

float opSmoothSubtraction( float d1, float d2, float k )
{
    float h = max(k-abs(-d1-d2),0.0);
    return max(-d1, d2) + h*h*0.25/k;
}

float opSmoothIntersection( float d1, float d2, float k )
{
    float h = max(k-abs(d1-d2),0.0);
    return max(d1, d2) + h*h*0.25/k;
}



#endif // OPERATIONS_INC